#Model 1
ID = np.random.randint(1,100000000,size=num_reps)
t1 = scipy.stats.uniform.rvs(loc=10000, scale=16000, size=num_reps)
m1 = scipy.stats.uniform.rvs(loc=1500, scale=1500, size=num_reps)
t_bound = 2000
t3 = scipy.stats.uniform.rvs(loc=1300, scale=(np.minimum(t_bound,m1)-1300), size=num_reps)
m_bound = 2000
m2 = scipy.stats.uniform.rvs(loc=800, scale=(np.minimum(m_bound,t3)-800), size=num_reps)
m3 = scipy.stats.uniform.rvs(loc=800, scale=(np.minimum(m_bound,t3)-800), size=num_reps)
m4 = scipy.stats.uniform.rvs(loc=200, scale=(np.minimum(m_bound,t3)-200), size=num_reps)
a = scipy.stats.uniform.rvs(loc=0.01, scale=0.02, size=num_reps)
f1 = a
Ne0 = np.rint(scipy.stats.uniform.rvs(loc=5000, scale=95000, size=num_reps))
Ne1 = np.rint(scipy.stats.uniform.rvs(loc=5000, scale=95000, size=num_reps))
Ne3 = np.rint(scipy.stats.uniform.rvs(loc=500, scale=4500, size=num_reps))
Ne4 = np.rint(scipy.stats.uniform.rvs(loc=5000, scale=45000, size=num_reps))
Sim = Parallel(n_jobs=1)(delayed(sim_pipeline)(ID=ID[i],m1=m1[i],m2=m2[i],m3=m3[i],m4=m4[i],t1=t1[i],t2=3000,t3=t3[i],f1=f1[i],f2=0,f3=0,f4=0,Ne0=Ne0[i],Ne1=Ne1[i],Ne3=Ne3[i],Ne4=Ne4[i],w=100000,n=1) for i in range(num_reps))
#Model 2
ID = np.random.randint(1,100000000,size=num_reps)
t1 = scipy.stats.uniform.rvs(loc=10000, scale=16000, size=num_reps)
m1 = scipy.stats.uniform.rvs(loc=1500, scale=1500, size=num_reps)
t_bound = 2000
t3 = scipy.stats.uniform.rvs(loc=1300, scale=(np.minimum(t_bound,m1)-1300), size=num_reps)
m_bound = 2000
m2 = scipy.stats.uniform.rvs(loc=800, scale=(np.minimum(m_bound,t3)-800), size=num_reps)
m3 = scipy.stats.uniform.rvs(loc=800, scale=(np.minimum(m_bound,t3)-800), size=num_reps)
m4 = scipy.stats.uniform.rvs(loc=200, scale=(np.minimum(m_bound,t3)-200), size=num_reps)
a = scipy.stats.uniform.rvs(loc=0.01, scale=0.02, size=num_reps)
d = scipy.stats.uniform.rvs(loc=0, scale=0.01, size=num_reps)
f1 = a-(d/2)
f2 = d/(1+(d/2)-a)
Ne0 = np.rint(scipy.stats.uniform.rvs(loc=5000, scale=95000, size=num_reps))
Ne1 = np.rint(scipy.stats.uniform.rvs(loc=5000, scale=95000, size=num_reps))
Ne3 = np.rint(scipy.stats.uniform.rvs(loc=500, scale=4500, size=num_reps))
Ne4 = np.rint(scipy.stats.uniform.rvs(loc=5000, scale=45000, size=num_reps))
Sim = Parallel(n_jobs=1)(delayed(sim_pipeline)(ID=ID[i],m1=m1[i],m2=m2[i],m3=m3[i],m4=m4[i],t1=t1[i],t2=3000,t3=t3[i],f1=f1[i],f2=f2[i],f3=0,f4=0,Ne0=Ne0[i],Ne1=Ne1[i],Ne3=Ne3[i],Ne4=Ne4[i],w=100000,n=1) for i in range(num_reps))
#Model 3
ID = np.random.randint(1,100000000,size=num_reps)
t1 = scipy.stats.uniform.rvs(loc=10000, scale=16000, size=num_reps)
m1 = scipy.stats.uniform.rvs(loc=1500, scale=1500, size=num_reps)
t_bound = 2000
t3 = scipy.stats.uniform.rvs(loc=1300, scale=(np.minimum(t_bound,m1)-1300), size=num_reps)
m_bound = 2000
m2 = scipy.stats.uniform.rvs(loc=800, scale=(np.minimum(m_bound,t3)-800), size=num_reps)
m3 = scipy.stats.uniform.rvs(loc=800, scale=(np.minimum(m_bound,t3)-800), size=num_reps)
m4 = scipy.stats.uniform.rvs(loc=200, scale=(np.minimum(m_bound,t3)-200), size=num_reps)
a = scipy.stats.uniform.rvs(loc=0.01, scale=0.02, size=num_reps)
d = scipy.stats.uniform.rvs(loc=0, scale=0.01, size=num_reps)
f1 = a-(d/2)
f2 = (a+(d/2)-f1)/(1-f1)
f3 = (a-(d/2)-f1)/(1-f1)
Ne0 = np.rint(scipy.stats.uniform.rvs(loc=5000, scale=95000, size=num_reps))
Ne1 = np.rint(scipy.stats.uniform.rvs(loc=5000, scale=95000, size=num_reps))
Ne3 = np.rint(scipy.stats.uniform.rvs(loc=500, scale=4500, size=num_reps))
Ne4 = np.rint(scipy.stats.uniform.rvs(loc=5000, scale=45000, size=num_reps))
Sim = Parallel(n_jobs=1)(delayed(sim_pipeline)(ID=ID[i],m1=m1[i],m2=m2[i],m3=m3[i],m4=m4[i],t1=t1[i],t2=3000,t3=t3[i],f1=f1[i],f2=f2[i],f3=f3[i],f4=0,Ne0=Ne0[i],Ne1=Ne1[i],Ne3=Ne3[i],Ne4=Ne4[i],w=100000,n=1) for i in range(num_reps))
#Model 4
ID = np.random.randint(1,100000000,size=num_reps)
t1 = scipy.stats.uniform.rvs(loc=10000, scale=16000, size=num_reps)
m1 = scipy.stats.uniform.rvs(loc=1500, scale=1500, size=num_reps)
t_bound = 2000
t3 = scipy.stats.uniform.rvs(loc=1300, scale=(np.minimum(t_bound,m1)-1300), size=num_reps)
m_bound = 2000
m2 = scipy.stats.uniform.rvs(loc=800, scale=(np.minimum(m_bound,t3)-800), size=num_reps)
m3 = scipy.stats.uniform.rvs(loc=800, scale=(np.minimum(m_bound,t3)-800), size=num_reps)
m4 = scipy.stats.uniform.rvs(loc=200, scale=(np.minimum(m_bound,t3)-200), size=num_reps)
a = scipy.stats.uniform.rvs(loc=0.01, scale=0.02, size=num_reps)
d = scipy.stats.uniform.rvs(loc=0, scale=0.01, size=num_reps)
f1 = a+(d/2)
f4 = d/(a+(d/2))
Ne0 = np.rint(scipy.stats.uniform.rvs(loc=5000, scale=95000, size=num_reps))
Ne1 = np.rint(scipy.stats.uniform.rvs(loc=5000, scale=95000, size=num_reps))
Ne3 = np.rint(scipy.stats.uniform.rvs(loc=500, scale=4500, size=num_reps))
Ne4 = np.rint(scipy.stats.uniform.rvs(loc=5000, scale=45000, size=num_reps))
Sim = Parallel(n_jobs=1)(delayed(sim_pipeline)(ID=ID[i],m1=m1[i],m2=m2[i],m3=m3[i],m4=m4[i],t1=t1[i],t2=3000,t3=t3[i],f1=f1[i],f2=0,f3=0,f4=f4[i],Ne0=Ne0[i],Ne1=Ne1[i],Ne3=Ne3[i],Ne4=Ne4[i],w=100000,n=1) for i in range(num_reps))
#Model 5
ID = np.random.randint(1,100000000,size=num_reps)
t1 = scipy.stats.uniform.rvs(loc=10000, scale=16000, size=num_reps)
m1 = scipy.stats.uniform.rvs(loc=1500, scale=1500, size=num_reps)
t_bound = 2000
t3 = scipy.stats.uniform.rvs(loc=1300, scale=(np.minimum(t_bound,m1)-1300), size=num_reps)
m_bound = 2000
m2 = scipy.stats.uniform.rvs(loc=800, scale=(np.minimum(m_bound,t3)-800), size=num_reps)
m3 = scipy.stats.uniform.rvs(loc=800, scale=(np.minimum(m_bound,t3)-800), size=num_reps)
m4 = scipy.stats.uniform.rvs(loc=200, scale=(np.minimum(m_bound,t3)-200), size=num_reps)
a = scipy.stats.uniform.rvs(loc=0.01, scale=0.02, size=num_reps)
d = scipy.stats.uniform.rvs(loc=0, scale=0.01, size=num_reps)
f1 = a-(d/2)
f2 = (a+(d/2)-f1)/(1-f1)
f4 = scipy.stats.uniform.rvs(loc=0, scale=0.5, size=num_reps)
f3 = (a-(d/2)-f1*(1-f4))/(1-f1)*(1-f4)
Ne0 = np.rint(scipy.stats.uniform.rvs(loc=5000, scale=95000, size=num_reps))
Ne1 = np.rint(scipy.stats.uniform.rvs(loc=5000, scale=95000, size=num_reps))
Ne3 = np.rint(scipy.stats.uniform.rvs(loc=500, scale=4500, size=num_reps))
Ne4 = np.rint(scipy.stats.uniform.rvs(loc=5000, scale=45000, size=num_reps))
Sim = Parallel(n_jobs=1)(delayed(sim_pipeline)(ID=ID[i],m1=m1[i],m2=m2[i],m3=m3[i],m4=m4[i],t1=t1[i],t2=3000,t3=t3[i],f1=f1[i],f2=f2[i],f3=f3[i],f4=f4[i],Ne0=Ne0[i],Ne1=Ne1[i],Ne3=Ne3[i],Ne4=Ne4[i],w=100000,n=1) for i in range(num_reps))